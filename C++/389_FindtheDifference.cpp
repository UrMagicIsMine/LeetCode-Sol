/* Given two strings s and t which consist of only lowercase letters.
*
* String t is generated by random shuffling string s and then add one more letter
* at a random position.
*
* Find the letter that was added in t.
*
* Example:
*
* Input:
* s = "abcd"
* t = "abcde"
*
* Output:
* e
*
* Explanation:
* 'e' is the letter that was added.
*/

#include <vector>
#include <string>
#include <unordered_map>
#include <algorithm>
#include <cassert>
using namespace std;

char findTheDifference_ST(string s, string t) {
	sort(s.begin(), s.end());
	sort(t.begin(), t.end());
	int i = 0;
	for (;i < s.length(); i++) {
		if (s[i] != t[i])
			break;
	}
	return t[i];
}

char findTheDifference_HT(string s, string t) {
	unordered_map<char, int> shash;

	for (auto c : s) {
		shash[c]++;
	}

	for (auto c : t) {
		if (shash[c] == 0)
			return c;
		else
			shash[c]--;
	}

}

char findTheDifference_XOR(string s, string t) {
	char c = 0;

	int i = 0;
	for (; i < s.length(); i++)
		c ^= s[i] ^ t[i];
	c ^= t[i];
	return c;
}

int main()
{
	string s = "abcd", t = "abcde";
	char ans = 'e';
	char ret1 = findTheDifference_ST(s, t);
	assert(ret1 == ans);
	char ret2 = findTheDifference_HT(s, t);
	assert(ret2 == ans);
	char ret3 = findTheDifference_XOR(s, t);
	assert(ret3 == ans);
	return 0;
}
